# CoCalc Examples Documentation File
# Copyright: CoCalc Authors, 2018
# This is derived content from the BSD licensed https://github.com/moble/jupyter_boilerplate/

# # # # # # # # # # # # # # # # # # # # # # # # # # #
# THIS FILE IS AUTOGENERATED -- DO NOT EDIT BY HAND #
# # # # # # # # # # # # # # # # # # # # # # # # # # #

---
language: python
---
category: ['Sympy', 'Assumptions']
prefixes: {"Q":"from sympy import ask, Q, pi\nfrom sympy.abc import x, y, z"}
---
prefix: "Q"
title: |
  Bounded
code: |
  Q.bounded(x)
---
prefix: "Q"
title: |
  Commutative
code: |
  Q.commutative(x)
---
prefix: "Q"
title: |
  Complex
code: |
  Q.complex(x)
---
prefix: "Q"
title: |
  Imaginary
code: |
  Q.imaginary(x)
---
prefix: "Q"
title: |
  Real
code: |
  Q.real(x)
---
prefix: "Q"
title: |
  Extended real
code: |
  Q.extended_real(x)
---
prefix: "Q"
title: |
  Integer
code: |
  Q.integer(x)
---
prefix: "Q"
title: |
  Odd
code: |
  Q.odd(x)
---
prefix: "Q"
title: |
  Even
code: |
  Q.even(x)
---
prefix: "Q"
title: |
  Prime
code: |
  Q.prime(x)
---
prefix: "Q"
title: |
  Composite
code: |
  Q.composite(x)
---
prefix: "Q"
title: |
  Zero
code: |
  Q.zero(x)
---
prefix: "Q"
title: |
  Nonzero
code: |
  Q.nonzero(x)
---
prefix: "Q"
title: |
  Rational
code: |
  Q.rational(x)
---
prefix: "Q"
title: |
  Algebraic
code: |
  Q.algebraic(x)
---
prefix: "Q"
title: |
  Transcendental
code: |
  Q.transcendental(x)
---
prefix: "Q"
title: |
  Irrational
code: |
  Q.irrational(x)
---
prefix: "Q"
title: |
  Finite
code: |
  Q.finite(x)
---
prefix: "Q"
title: |
  Infinite
code: |
  Q.infinite(x)
---
prefix: "Q"
title: |
  Infinitesimal
code: |
  Q.infinitesimal(x)
---
prefix: "Q"
title: |
  Negative
code: |
  Q.negative(x)
---
prefix: "Q"
title: |
  Nonnegative
code: |
  Q.nonnegative(x)
---
prefix: "Q"
title: |
  Positive
code: |
  Q.positive(x)
---
prefix: "Q"
title: |
  Nonpositive
code: |
  Q.nonpositive(x)
---
prefix: "Q"
title: |
  Hermitian
code: |
  Q.hermitian(x)
---
prefix: "Q"
title: |
  Antihermitian
code: |
  Q.antihermitian(x)