# CoCalc Examples Documentation File
# Copyright: CoCalc Authors, 2018
# License:   Creative Commons: Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
---
language: python
---
category: ["Data Analysis", "Introduction"]
---
title: Pandas Basics
descr: |
  [Pandas](https://pandas.pydata.org/) is a powerful library for managing large datasets and operating with them.

  Here, let's create a `DataFrame` for a hypothetical experiment about `age` vs. `weight`.

  The columns have corresponding names, there is an index, and based on that many powerful transformation functions are available to ease working with such datasets.
code: |
  import pandas as pd
  age    = [1, 2, 3, 5, 6, 8, 8, 10, 9, 10, 11, 10, 11, 12, 15]
  weight = [4, 4, 3, 3, 4, 3,   2,  2, 2,  1,  2,  1,  1, .5, .1]
  data = pd.DataFrame({'age': age, 'weight': weight})
  data
---
category: ["Data Analysis", "Statistics"]
---
title: "Statsmodels: Ordinary Least Squares"
descr: |
  [Statsmodels](http://www.statsmodels.org) is a powerful library for classical statical modeling.

  This example fits an ordinary least squares model for a given dataset.
  In the middle, the string `'B ~ A + np.log(A) + 1'` is an R-style formula for expressing the relationship.
code: |
  import numpy as np
  import pandas as pd
  import statsmodels.api as sm
  import statsmodels.formula.api as smf
  data = pd.DataFrame(
      {
          'A': [1, 2, 3, 5, 6, 8, 8.5, 10, 9, 10, 11, 10, 11, 12, 15],
          'B': [4, 4, 3, 3, 4, 3,   2,  2, 2,  1,  2,  1,  1, .5, .1]
      })
  model = smf.ols('B ~ A + np.log(A) + 1', data=data)
  results = model.fit()
  print(results.params)
  print()
  print(results.summary())